

================================================================
== Vitis HLS Report for 'pulse_detector'
================================================================
* Date:           Thu Nov  7 16:13:42 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        pulse_detector-vitishls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.544 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.54>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%spectopmodule_ln28 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [src/pulse_detector.cpp:28]   --->   Operation 2 'spectopmodule' 'spectopmodule_ln28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specinterface_ln28 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_2, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0" [src/pulse_detector.cpp:28]   --->   Operation 3 'specinterface' 'specinterface_ln28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %pulse"   --->   Operation 4 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %pulse, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 5 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %reset"   --->   Operation 6 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %reset, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %out_r"   --->   Operation 8 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%reset_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %reset" [src/pulse_detector.cpp:28]   --->   Operation 10 'read' 'reset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%pulse_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %pulse" [src/pulse_detector.cpp:28]   --->   Operation 11 'read' 'pulse_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%previous_pulse_load = load i1 %previous_pulse" [src/pulse_detector.cpp:37]   --->   Operation 12 'load' 'previous_pulse_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node or_ln37)   --->   "%xor_ln37 = xor i1 %pulse_read, i1 1" [src/pulse_detector.cpp:37]   --->   Operation 13 'xor' 'xor_ln37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln37 = or i1 %previous_pulse_load, i1 %xor_ln37" [src/pulse_detector.cpp:37]   --->   Operation 14 'or' 'or_ln37' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%output_pulse_load = load i1 %output_pulse" [src/pulse_detector.cpp:39]   --->   Operation 15 'load' 'output_pulse_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %or_ln37, void %if.then, void %if.else" [src/pulse_detector.cpp:37]   --->   Operation 16 'br' 'br_ln37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln38 = store i1 1, i1 %output_pulse" [src/pulse_detector.cpp:38]   --->   Operation 17 'store' 'store_ln38' <Predicate = (!or_ln37)> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (1.70ns)   --->   "%br_ln39 = br void %if.end9" [src/pulse_detector.cpp:39]   --->   Operation 18 'br' 'br_ln39' <Predicate = (!or_ln37)> <Delay = 1.70>
ST_1 : Operation 19 [1/1] (0.97ns)   --->   "%and_ln39 = and i1 %output_pulse_load, i1 %reset_read" [src/pulse_detector.cpp:39]   --->   Operation 19 'and' 'and_ln39' <Predicate = (or_ln37)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (1.70ns)   --->   "%br_ln39 = br i1 %and_ln39, void %if.end9, void %if.then8" [src/pulse_detector.cpp:39]   --->   Operation 20 'br' 'br_ln39' <Predicate = (or_ln37)> <Delay = 1.70>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln40 = store i1 0, i1 %output_pulse" [src/pulse_detector.cpp:40]   --->   Operation 21 'store' 'store_ln40' <Predicate = (or_ln37 & and_ln39)> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (1.70ns)   --->   "%br_ln41 = br void %if.end9" [src/pulse_detector.cpp:41]   --->   Operation 22 'br' 'br_ln41' <Predicate = (or_ln37 & and_ln39)> <Delay = 1.70>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%output_pulse_loc_1 = phi i1 1, void %if.then, i1 0, void %if.then8, i1 %output_pulse_load, void %if.else" [src/pulse_detector.cpp:39]   --->   Operation 23 'phi' 'output_pulse_loc_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%store_ln43 = store i1 %pulse_read, i1 %previous_pulse" [src/pulse_detector.cpp:43]   --->   Operation 24 'store' 'store_ln43' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%write_ln44 = write void @_ssdm_op_Write.ap_none.i1P0A, i1 %out_r, i1 %output_pulse_loc_1" [src/pulse_detector.cpp:44]   --->   Operation 25 'write' 'write_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%ret_ln45 = ret" [src/pulse_detector.cpp:45]   --->   Operation 26 'ret' 'ret_ln45' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.544ns
The critical path consists of the following:
	wire read operation ('reset', src/pulse_detector.cpp:28) on port 'reset' (src/pulse_detector.cpp:28) [14]  (0.000 ns)
	'and' operation ('and_ln39', src/pulse_detector.cpp:39) [25]  (0.978 ns)
	multiplexor before 'phi' operation ('output_pulse_loc_1', src/pulse_detector.cpp:39) with incoming values : ('output_pulse_load', src/pulse_detector.cpp:39) [31]  (1.707 ns)
	'phi' operation ('output_pulse_loc_1', src/pulse_detector.cpp:39) with incoming values : ('output_pulse_load', src/pulse_detector.cpp:39) [31]  (0.000 ns)
	blocking operation 0.8587 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
